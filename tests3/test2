.global _start

.section .text

  movq root, %rdi
  xor %r8, %r8
  movl __ExpectedArraySize, %r8d
  movq $__ExpectedArray, %r9
  movq $0, %r10
  call rec

  cmp %r10, %r8
  jne bad_exit
  
  movq $60, %rax
  movq $0, %rdi
  syscall

bad_exit:
  movq $60, %rax
  movq $1, %rdi
  syscall

rec:
  pushq %rdi
  movq (%rdi), %r11
  cmp $0, %r11
  je skip_left
  movq %r11, %rdi
  call rec
  movq (%rsp), %rdi
skip_left:
  cmpq %r8, %r10
  je bad_exit
  movl 8(%rdi), %eax
  movl (%r9, %r10, 4), %edx
  cmpl %eax, %edx
  jne bad_exit
  inc %r10

  movq 12(%rdi), %r11
  cmp $0, %r11
  je skip_right
  movq %r11, %rdi
  call rec
skip_right:
  popq %rdi
  ret


.section .data
__ExpectedArray: .int 1301522834, 1769457850
__Garbage_2694245: .byte 116, 227, 191, 224, 56, 203, 132, 219, 176, 154
__ExpectedArraySize: .int 2
__Garbage_237092098: .byte 106, 124, 246, 189, 97, 0, 85, 210, 12
__Nodes:
.quad 0
.int 1301522834
.quad 0
__Garbage_590928163: .byte 71, 80, 62, 26, 242, 172, 25, 228, 114
root:
.quad __Nodes + 0
__Garbage_927426244: .byte 172, 218, 40, 208
node:
.quad -863166381
.int 1769457850
.quad -1755838349
