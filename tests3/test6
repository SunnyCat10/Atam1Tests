.global _start

.section .text

  movq root, %rdi
  xor %r8, %r8
  movl __ExpectedArraySize, %r8d
  movq $__ExpectedArray, %r9
  movq $0, %r10
  call rec

  cmp %r10, %r8
  jne bad_exit
  
  movq $60, %rax
  movq $0, %rdi
  syscall

bad_exit:
  movq $60, %rax
  movq $1, %rdi
  syscall

rec:
  pushq %rdi
  movq (%rdi), %r11
  cmp $0, %r11
  je skip_left
  movq %r11, %rdi
  call rec
  movq (%rsp), %rdi
skip_left:
  cmpq %r8, %r10
  je bad_exit
  movl 8(%rdi), %eax
  movl (%r9, %r10, 4), %edx
  cmpl %eax, %edx
  jne bad_exit
  inc %r10

  movq 12(%rdi), %r11
  cmp $0, %r11
  je skip_right
  movq %r11, %rdi
  call rec
skip_right:
  popq %rdi
  ret


.section .data
__ExpectedArray: .int -1344974101, 1604430459
__Garbage_239487597: .byte 129, 152, 89, 36, 170, 1, 14, 136, 15, 172
__ExpectedArraySize: .int 2

__Nodes:
.quad 0
.int -1344974101
.quad 0
__Garbage_276690273: .byte 156, 113, 192, 133, 158, 120, 153, 231, 22
root:
.quad __Nodes + 0
__Garbage_950992272: .byte 4, 33, 244, 21, 123, 127, 22
node:
.quad -478532270
.int 1604430459
.quad 1368236804
