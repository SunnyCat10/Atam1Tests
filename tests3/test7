.global _start

.section .text

  movq root, %rdi
  xor %r8, %r8
  movl __ExpectedArraySize, %r8d
  movq $__ExpectedArray, %r9
  movq $0, %r10
  call rec

  cmp %r10, %r8
  jne bad_exit
  
  movq $60, %rax
  movq $0, %rdi
  syscall

bad_exit:
  movq $60, %rax
  movq $1, %rdi
  syscall

rec:
  pushq %rdi
  movq (%rdi), %r11
  cmp $0, %r11
  je skip_left
  movq %r11, %rdi
  call rec
  movq (%rsp), %rdi
skip_left:
  cmpq %r8, %r10
  je bad_exit
  movl 8(%rdi), %eax
  movl (%r9, %r10, 4), %edx
  cmpl %eax, %edx
  jne bad_exit
  inc %r10

  movq 12(%rdi), %r11
  cmp $0, %r11
  je skip_right
  movq %r11, %rdi
  call rec
skip_right:
  popq %rdi
  ret


.section .data
__ExpectedArray: .int -1808236266, -54665879, 777176089, 2026784976
__Garbage_303558563: .byte 35, 198
__ExpectedArraySize: .int 4
__Garbage_925171318: .byte 139, 221, 98, 78, 35
__Nodes:
.quad 0
.int -1808236266
.quad __Nodes + 40
.quad 0
.int -54665879
.quad 0
.quad __Nodes + 20
.int 777176089
.quad 0
__Garbage_724536530: .byte 57, 246
root:
.quad __Nodes + 0
__Garbage_128259409: .byte 95, 148, 207, 106
node:
.quad -1834936354
.int 2026784976
.quad -292011139
