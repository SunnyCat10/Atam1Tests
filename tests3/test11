.global _start

.section .text

  movq root, %rdi
  xor %r8, %r8
  movl __ExpectedArraySize, %r8d
  movq $__ExpectedArray, %r9
  movq $0, %r10
  call rec

  cmp %r10, %r8
  jne bad_exit
  
  movq $60, %rax
  movq $0, %rdi
  syscall

bad_exit:
  movq $60, %rax
  movq $1, %rdi
  syscall

rec:
  pushq %rdi
  movq (%rdi), %r11
  cmp $0, %r11
  je skip_left
  movq %r11, %rdi
  call rec
  movq (%rsp), %rdi
skip_left:
  cmpq %r8, %r10
  je bad_exit
  movl 8(%rdi), %eax
  movl (%r9, %r10, 4), %edx
  cmpl %eax, %edx
  jne bad_exit
  inc %r10

  movq 12(%rdi), %r11
  cmp $0, %r11
  je skip_right
  movq %r11, %rdi
  call rec
skip_right:
  popq %rdi
  ret


.section .data
__ExpectedArray: .int -2090600297, -226760405, -215544110, -130926047, 1758343388, 1890467576
__Garbage_189428993: .byte 153, 109, 254, 228, 28, 110, 189, 165, 214
__ExpectedArraySize: .int 6
__Garbage_799509650: .byte 51, 172, 217, 153
__Nodes:
.quad __Nodes + 20
.int -215544110
.quad 0
.quad __Nodes + 80
.int -226760405
.quad 0
.quad __Nodes + 0
.int -130926047
.quad __Nodes + 60
.quad __Nodes + 100
.int 1890467576
.quad 0
.quad 0
.int -2090600297
.quad 0
.quad 0
.int 1758343388
.quad 0
__Garbage_973991422: .byte 75, 50
root:
.quad __Nodes + 40
__Garbage_768760118: .byte 132, 245, 180
node:
.quad 630547743
.int 1758343388
.quad -1645220423
