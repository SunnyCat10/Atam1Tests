.global _start

.section .text

  movq root, %rdi
  xor %r8, %r8
  movl __ExpectedArraySize, %r8d
  movq $__ExpectedArray, %r9
  movq $0, %r10
  call rec

  cmp %r10, %r8
  jne bad_exit
  
  movq $60, %rax
  movq $0, %rdi
  syscall

bad_exit:
  movq $60, %rax
  movq $1, %rdi
  syscall

rec:
  pushq %rdi
  movq (%rdi), %r11
  cmp $0, %r11
  je skip_left
  movq %r11, %rdi
  call rec
  movq (%rsp), %rdi
skip_left:
  cmpq %r8, %r10
  je bad_exit
  movl 8(%rdi), %eax
  movl (%r9, %r10, 4), %edx
  cmpl %eax, %edx
  jne bad_exit
  inc %r10

  movq 12(%rdi), %r11
  cmp $0, %r11
  je skip_right
  movq %r11, %rdi
  call rec
skip_right:
  popq %rdi
  ret


.section .data
__ExpectedArray: .int -1310145885, 831152833, 1205124058, 1581775927
__Garbage_331994926: .byte 197, 138, 109, 67, 175, 243, 6, 194, 155
__ExpectedArraySize: .int 4
__Garbage_424134951: .byte 206, 99, 175, 42, 233, 123, 185, 146, 213
__Nodes:
.quad 0
.int -1310145885
.quad __Nodes + 40
.quad __Nodes + 0
.int 1205124058
.quad 0
.quad 0
.int 831152833
.quad 0
__Garbage_673758297: .byte 69, 87, 178
root:
.quad __Nodes + 20
__Garbage_898200087: .byte 121, 77
node:
.quad 1240787004
.int 1581775927
.quad -699445450
